name: Release CI

on:
  push:
    branches:
      - develop

jobs:    
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      
    - name: Checkout
      uses: actions/checkout@master
    
    - name: Setup Nodejs Env
      run: echo "NODE_VER=`cat .nvmrc`" >> $GITHUB_ENV
    
    - name: Setup Nodejs
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VER }}
        registry-url: https://npm.pkg.github.com/
    
    - name: Setup .npmrc
      run: |
        echo "@crystaldelta:registry=https://npm.pkg.github.com/" >> ~/.npmrc 
        echo "//npm.pkg.github.com/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc
    
    - name: Install dependencies
      run: npm ci
      env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
    
    - name: Build
      run: npm run build
    
    - name: Release
      uses: cycjimmy/semantic-release-action@v3
      env:
          GITHUB_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      with:
          tag: latest
    
    - name: Notify Slack
      uses: rtCamp/action-slack-notify@v2
      with:
        text: "Package `@crystaldelta/xen-paragon` successfully published! Version: `${{ env.NEXT_RELEASE_VERSION }}`"
      env:
        SLACK_USERNAME: GitHub NPM
        SLACK_ICON: https://stg-xenops-s3-icons.s3.ap-southeast-2.amazonaws.com/github.png
        SLACK_TITLE: Latest NPM Publish Tag For XEN PARAGON
        SLACK_MESSAGE: ${{ env.NEXT_RELEASE_VERSION }}
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
